services:
  # Определяем название приложения в services.
  horror:
    # Задаём название сети для контейнера.
    networks:
      - horror_core
    # Задаём имя контейнера.
    container_name: horror_cont
    # Сообщаем что для сервиса надо запустить Dockerfile и указываем путь к нему.
    build:
      context: .
      dockerfile: Dockerfile
    # Устанавливаем команду для применения миграций и для запуска сервера.
    command: >
       sh -c "python manage.py migrate && uvicorn horror_core.asgi:application --host 0.0.0.0 --port 8000"
    # Параметр сопоставляющий порты между хостом(8000) и контейнером(8000).
    ports:
      - '8000:8000'
    environment:
      TZ: Europe/Moscow
    # Указываем что всё(все локальные изменения) в текущей директории должно быть доступно в контейнере.
    volumes:
      - .:/horror_core
    # Контейнер будет перезапускаться, если он был остановлен, за исключением, когда он был остановлен вручную.
    restart: unless-stopped

# Соединяем все контейнеры, где указана сеть, в одну сеть.
networks:
  horror_core:
    driver: bridge